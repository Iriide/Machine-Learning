# -*- coding: utf-8 -*-
"""lab07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1syLI0tBxJaG252IYx__3-B6PUfs6Q4g_
"""

import pickle

from sklearn.datasets import fetch_openml
from sklearn.cluster import KMeans, DBSCAN
from sklearn.metrics import silhouette_score, confusion_matrix
import numpy as np

"""1. Przygotowanie danych"""

mnist = fetch_openml('mnist_784', version=1, as_frame=False, parser='auto')
mnist.target = mnist.target.astype(np.uint8)
X = mnist['data']
y = mnist['target']

"""2. KMeans"""

km8 = KMeans(8)
km9 = KMeans(9)
km10 = KMeans(10)
km11 = KMeans(11)
km12 = KMeans(12)

y_km8 = km8.fit_predict(X)
y_km9 = km9.fit_predict(X)
y_km10 = km10.fit_predict(X)
y_km11 = km11.fit_predict(X)
y_km12 = km12.fit_predict(X)

silhouette = [silhouette_score(X, y_km8), silhouette_score(X, y_km9), silhouette_score(X, y_km10), silhouette_score(X, y_km11), silhouette_score(X, y_km12)]
with open('kmeans_sil.pck', 'wb') as f:
    pickle.dump(silhouette, f)

matrix = confusion_matrix(y, y_km10)

array = np.array([], dtype=np.int32)
for row in matrix:
    max = int(np.argmax(row))
    array = np.append(array, max)

array = np.sort(array, axis=None)
array = np.unique(array)

with open('kmeans_argmax.pck', 'wb') as f:
    pickle.dump(array, f)

"""3. DBSCAN"""

dists = []
for i in range(300):
    x1 = X[i]
    for j in range(len(X)):
        if i != j:
            x2 = X[j]
            dist = np.linalg.norm(x1 - x2)
            if dist != 0:
                dists.append(dist)

eps_values = sorted(dists)[:10]

with open('dist.pkl', 'wb') as f:
    pickle.dump(eps_values, f)

eps_mean = np.mean(eps_values[:3])
array = np.array([], dtype=np.int32)
for eps in np.arange(eps_mean, eps_mean+eps_mean * 0.1, eps_mean * 0.04):
    dbscan = DBSCAN(eps)
    clusters = dbscan.fit_predict(X)
    clusters = len(set(clusters)) - (1 if -1 in clusters else 0)
    array = np.append(array, clusters)

with open('dbscan_len.pkl', 'wb') as f:
    pickle.dump(eps_values, f)

